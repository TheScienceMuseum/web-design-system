@use "sass:math";

$grid-width: 72rem !default;
$grid-gutter: clamp-between(1rem, 2rem) !default;
$grid-columns: 12 !default;
$page-gutter: $grid-gutter !default;

@mixin container {
  max-width: $grid-width;
  position: relative;
  margin-left: auto;
  margin-right: auto;

  padding-left: $page-gutter;
  padding-right: $page-gutter;
}

.o-container {
  @include container;
}

.o-flex-container {
  @include container;
  display: flex;
}

.o-grid {


  & > * {
    width: 100%;
    min-width: 0; // default is min-content, which is usually a good thing but unexpected here.
  }

  @for $i from 1 through 12 {
    &--#{$i}cols {
      display: grid;
      gap: $grid-gutter;
      grid-template-columns: repeat($i, 1fr);
    }

    &__span#{$i} {
      grid-column: span $i;
    }
  }

  // separate loops to keep order in output
  @for $i from 1 through 12 {
    @include media(">=small") {
      &--#{$i}cols\@s {
        display: grid;
        gap: $grid-gutter;
        grid-template-columns: repeat($i, 1fr);
      }
    }
  }

  @for $i from 1 through 12 {
    @include media(">=medium") {
      &--#{$i}cols\@m {
        display: grid;
        gap: $grid-gutter;
        grid-template-columns: repeat($i, 1fr);
      }
    }
  }

  @for $i from 1 through 12 {
    @include media(">=large") {
      &--#{$i}cols\@l {
        display: grid;
        gap: $grid-gutter;
        grid-template-columns: repeat($i, 1fr);
      }
    }
  }


  @include media(">=medium") {

    &--page {
      display: grid;
      grid-template-columns: 2fr 1fr;
      grid-template-areas: "article sidebar";
    }

    &__sidebar {
      // width: calc(100% / 3);
      grid-area: sidebar;
    }

    &__article {
      // width: calc(2 * 100% / 3);
      grid-area: article;
    }
  }

  // flipped order grid for learning resources results
  &--reverse {
    display: grid;
    grid-template-columns: 2fr 1fr;
    grid-template-areas: "results filters";
  }

  &__filters {
    @include media(">=small") {
      grid-area: filters;
    }
  }

  &__results {
    @include media(">=small") {
      grid-area: results;
    }
  }
}